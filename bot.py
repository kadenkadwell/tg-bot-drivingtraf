from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command, Text
import logging
import os
import random
from keep_alive import keep_alive

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
API_TOKEN = os.getenv('API_TOKEN')
CHANNEL_USERNAME = '@drivingtraf'

# –°–ª–æ–≤–∞—Ä—å –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
KEYWORDS = {
    '–¥–µ–≤—É—à–∫–∞': {'path': 'mainphoto.webp', 'caption': '–í–æ—Ç —Ç–≤–æ–π —Ñ–∞–π–ª!'},
    'traffic2025': {
        'path': None,
        'caption': '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ–º–æ–∫–æ–¥, –¥–µ—Ä–∂–∏ "–ß–µ–∫-–ª–∏—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ seo-–∫–µ–π—Å–æ–≤"!\nhttps://docs.google.com/spreadsheets/d/15OGc_BBkT-H_f-3Iy4Zccvj2j2rLXgm9hiiGX45CU0A/edit?usp=sharing'
    }
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

async def check_subscription(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª."""
    try:
        member = await bot.get_chat_member(chat_id=CHANNEL_USERNAME, user_id=user_id)
        return member.status in ['creator', 'administrator', 'member']
    except Exception as e:
        logging.warning(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

@dp.message(Command(commands=['start', 'help']))
async def send_welcome(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ /start –∏ /help."""
    text = (
        "–ü—Ä–∏–≤–µ—Ç! üëã\n\n"
        "–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º.\n"
        "–ù–∞–ø–∏—à–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –∏–∑ –≤–∏–¥–µ–æ –Ω–∞ –Ω–∞—à–µ–º YouTube-–∫–∞–Ω–∞–ª–µ.\n"
        "–ï—Å–ª–∏ —Ç—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª @drivingtraf, —è –ø–æ–ø—Ä–æ—à—É —Ç–µ–±—è –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è.\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç—å —Å–ª–æ–≤–æ: –¥–µ–≤—É—à–∫–∞ –∏–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥."
    )
    await message.answer(text)

@dp.message(Text)
async def keyword_handler(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏."""
    if message.text.startswith('/'):
        return

    keyword = message.text.lower().strip()
    if keyword in KEYWORDS:
        is_subscribed = await check_subscription(message.from_user.id)
        if is_subscribed:
            data = KEYWORDS[keyword]
            if data['path'] and os.path.exists(data['path']):
                try:
                    with open(data['path'], 'rb') as file:
                        await message.answer_document(file, caption=data['caption'])
                except Exception as e:
                    logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞: {e}")
                    await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            else:
                await message.answer(data['caption'])
        else:
            await message.answer(
                "–ü–æ—Ö–æ–∂–µ, –≤—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª @drivingtraf.\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Ñ–∞–π–ª–∞–º:\n"
                "https://t.me/drivingtraf"
            )
    else:
        unknown_responses = [
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –∑–Ω–∞—é —Ç–∞–∫–æ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ üòï",
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –∏–∑ –≤–∏–¥–µ–æ –Ω–∞ –Ω–∞—à–µ–º YouTube.",
            "–•–º–º... —Ç–∞–∫–æ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ —É –º–µ–Ω—è –Ω–µ—Ç. –ù–∞–ø–∏—à–∏—Ç–µ /help –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏.",
            "–ù–µ –º–æ–≥—É –ø–æ–Ω—è—Ç—å, —á—Ç–æ –≤—ã –∏–º–µ–ª–∏ –≤ –≤–∏–¥—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /help."
        ]
        await message.answer(random.choice(unknown_responses))

if __name__ == '__main__':
    keep_alive()
    dp.run_polling(bot)
